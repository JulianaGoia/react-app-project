{"version":3,"sources":["App.js","index.js"],"names":["App","useState","client","setClient","modalOpen","setModalOpen","cardSelect","setCardSelect","selectClient","setSelectClient","value","showTransaction","setShowTransaction","payment","setPayment","cards","card_number","cvv","expiry_date","useEffect","fetch","method","then","data","json","result","className","map","item","index","src","img","name","id","username","type","onClick","showModal","style","display","onSubmit","event","preventDefault","transaction","body","response","status","sendTransaction","placeholder","required","onChange","e","target","card","i","substring","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdffcca5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\n\n//consumo da API para listar usuarios\nfunction  App() {\n\n  const [client, setClient] = useState([]); //const para fazer a listagem de clientes\n  const [modalOpen, setModalOpen] = useState(false); //const para abrir modal de pagamento\n  const [cardSelect, setCardSelect] = useState(\"\"); //const para identificar as informações do cartão\n  const [selectClient, setSelectClient] = useState({}); //const para pegar o nome do cliente\n  const [value, setValue] = useState(\"\"); //const para identifica o valor da transferência\n  const [showTransaction, setShowTransaction] = useState(\"none\"); //const para abrir a modal de recibo de pagamento\n  const [payment, setPayment] = useState(\"\");\n\n  //listagem de cartões\n const cards = [\n  // valid card\n  {\n      card_number: '1111111111111111',\n      cvv: 789,\n      expiry_date: '01/18',\n  },\n  // invalid card\n  {\n      card_number: '4111111111111234',\n      cvv: 123,\n      expiry_date: '01/20',\n  }\n];\n  \n\n  useEffect(() => {\n    fetch(\"https://www.mocky.io/v2/5d531c4f2e0000620081ddce\", {\n        method: 'get'\n    })\n        .then((data) => data.json())\n        .then((result) => {\n            setClient(result)\n        })\n}, [])\n\n\n// função para abrir modal de pagamento\nconst showModal = (index) => {\n  setModalOpen(true);  //a modal abre\n  setCardSelect(index);  //\n  setSelectClient(client[index]); //states que vai identificar o cliente e sua posiçao\n\n}\n\n// função para fechar modal de pagamento\nconst closeModal = () => {\n  setModalOpen(false);\n  setShowTransaction('none');\n  setPayment(\"\");\n\n}\n\n //função para fechar modal de recibo\nconst resetPage = () => {\n  setPayment(\"\");\n  setCardSelect(\"\");\n  setShowTransaction(\"none\");\n  \n}\n\nconst sendTransaction = (event) => {\n  event.preventDefault()\n\n  const transaction = {\n    \"card_number\": cards[cardSelect].card_number,\n    \"cvv\": cards[cardSelect].cvv,\n    \"expiry_date\": cards[cardSelect].expiry_date,\n    \"destination_user_id\": selectClient.id,\n    \"value\": value\n  }\n\n  fetch (\"https://run.mocky.io/v3/533cd5d7-63d3-4488-bf8d-4bb8c751c989\", {\n            method: \"post\",\n            body: transaction\n        })\n          .then(response => response.json())\n          .then((data) => {\n              setModalOpen(false)\n              setShowTransaction(\"block\")\n        \n              if (data.status === \"Aprovada\") {\n                setPayment(\"Pagamento concluído com sucesso.\")\n\n            } else { \n                setPayment(\"Pagamento NÃO foi concluído com sucesso.\")\n            }\n        })\n    }\n\n\n    return (\n      <>\n      {/*Lista de usuarios*/}\n        <div className = 'body'>\n           {client.map((item, index) => (\n\n             <ul className = 'list'>\n                  <li className = 'users'>\n\n                 <img src={item.img} className = 'images'></img>\n                  <p className ='txt'>Nome do Usuário: {item.name} <br></br>\n                  ID: {item.id}\n                  Username: {item.username}</p>\n\n                  {/* A 'index' identifica a posição do cliente na listagem */}\n                  <input type='button' value='Pagar' className = 'btn' onClick = {() => showModal(index)}></input>\n                  </li>\n             </ul>\n            ))}\n       </div>\n\n       {/* Modal de pagamento*/}\n       {/* Fechar Modal pelo método de backdrop\n       <div className = \"backdrop\" style = {{display: (modalOpen ? 'block' : 'none')}} onClick = {() => modalOpen(false)}>\n          </div>\n       */}\n       \n          <div className = \"modal\" style = {{display: (modalOpen ? 'block' : 'none')}}>\n            <form className = \"modal-form\" onSubmit = {(event) => sendTransaction(event)}>\n                <p className =\"modal-label\"> Pagamento para: \n                  <strong className = \"clientName\"> {selectClient.name} </strong>\n                </p> \n\n                <input className = \"form-input\" type='number' placeholder='R$ 0.00'></input>\n                <select className = \"form-select\" required value = {cardSelect} onChange = {e => setPayment(e.target.value)}>\n                  \n                      {cards.map((card, i) => {\n                        return <option key={'optionCard' + i} value={i}>Cartão com final {card.card_number.substring(12)}\n                        </option>\n                    })}\n                </select>\n\n                <button className = \"form-button\" > Pagar </button>\n                <button className = \"close-modal\" onClick = {() => closeModal()}> Fechar </button>\n            </form>\n          </div>\n        \n\n        {/* Recibo de pagamento*/}\n        <div className = \"modal-receipt\" style = {{ display: showTransaction }} >\n           <div className = \"receipt-title\"> Recibo de pagamento</div>\n           \n           <div className = \"receipt-msg\"> {payment} </div>\n\n           <div className = \"close-receipt\">\n              <button onClick = {() => resetPage()}> X </button>\n\n           </div>\n           \n        </div>\n        \n        </>\n    );\n  }\n\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}